package Ventas;

import Ventas.Item.VentaItem;
import java.awt.Desktop;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import java.awt.Frame;
import java.awt.Window;
import java.io.File;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import util.ReporteCompra;

public class Venta_men extends javax.swing.JPanel {
    private VentaDAO ventaDAO = new VentaDAO();
    private VentaItem ventaItem = new VentaItem();
    
    /**
     * Creates new form CategoriaForm
     */
    public Venta_men() {
        initComponents();
        
        // Cargar datos a la tabla del formulario
        cargarDatos();
    }
    
    private void cargarDatos() {
        DefaultTableModel modelo = (DefaultTableModel) jtContenido.getModel();
        modelo.setRowCount(0);
        
        for (Venta c : ventaDAO.listar()) {
            modelo.addRow(new Object[]{c.getId(), c.getNit(), c.getCliente(), c.getTotal(), c.getFecha()});
        }
        ajustarAnchoColumnas();
    }
    private void ajustarAnchoColumnas() {
        // Obtener el modelo de columnas
        TableColumnModel columnModel = jtContenido.getColumnModel();

//        // Columna 0: ID → ancho pequeño
//        columnModel.getColumn(0).setPreferredWidth(50);   // ID
//        columnModel.getColumn(0).setMinWidth(50);
//        columnModel.getColumn(0).setMaxWidth(80);
        
        // Ocultar la columna "Código"
        columnModel.getColumn(0).setMinWidth(0);
        columnModel.getColumn(0).setMaxWidth(0);
        columnModel.getColumn(0).setWidth(0);
        
//        // Columna 1: Nombre → más ancha
//        columnModel.getColumn(1).setPreferredWidth(200);
//        columnModel.getColumn(1).setMinWidth(100);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtContenido = new javax.swing.JTable();
        btnNuevo = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jtContenido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Código", "Nit", "Proveedor", "Total", "Fecha"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtContenido.setToolTipText("");
        jScrollPane1.setViewportView(jtContenido);

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnImprimir.setText("Imprimir");
        btnImprimir.setToolTipText("Imprimir detalle de la compra");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 696, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnNuevo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnImprimir)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevo)
                    .addComponent(btnImprimir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // 1. Obtener ventana padre
        Window window = SwingUtilities.getWindowAncestor(this);
        if (!(window instanceof Frame)) {
            JOptionPane.showMessageDialog(this, "No se puede abrir el formulario.");
            return;
        }
        
        // 2. Crear y mostrar el diálogo
        VentaForm dialog = new VentaForm((Frame) window, true);
        dialog.setVisible(true); // bloquea hasta que se cierre
        
        if(dialog.idproducto_recuperar != null) {
            // Recuperar el ID de la última venta
            Integer idVenta = dialog.idproducto_recuperar;
            
            imprimirVenta(idVenta);
            
            // Cargar datos a la tabla del formulario
            cargarDatos();
        }
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        // 1. Verificar fila seleccionada
        int filaSeleccionada = jtContenido.getSelectedRow();
        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Selecciona alguna compra para Imprimir. ");
            return;
        }
        
        Integer idVenta = (Integer) jtContenido.getValueAt(filaSeleccionada, 0);
        imprimirVenta(idVenta);
    }//GEN-LAST:event_btnImprimirActionPerformed
    
    private void imprimirVenta(Integer idVenta) {
        // 1. Obtener la cabecera de la compra
        Venta venta = ventaDAO.obtenerVentaPorId(idVenta);
        
        if (venta == null) {
            JOptionPane.showMessageDialog(this, "❌ No se encontró la compra con ID: " + idVenta);
            return;
        }
        
        // 2. Obtener los ítems
        List<VentaItem> items = ventaItem.ventaItem(idVenta);
        
        if (items.isEmpty()) {
            JOptionPane.showMessageDialog(this, "❌ No se encontraron ítems para esta compra.");
            return;
        }
        
        // 3. Generar PDF
        String archivoPDF = ReporteCompra.generarPDFVenta(
            venta.getId(),
            venta.getNit(),
            venta.getCliente(),
            venta.getFecha(), // java.sql.Date → se convierte automáticamente
            venta.getTotal(),
            items
        );
        
        if (archivoPDF == null) {
            JOptionPane.showMessageDialog(this, "❌ Error al generar el PDF.");
            return;
        }
        
        // 4. Abrir el PDF
        try {
            Desktop.getDesktop().open(new File(archivoPDF));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "✅ PDF generado: " + archivoPDF);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtContenido;
    // End of variables declaration//GEN-END:variables
}
