package Producto;

import Categoria.*;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;

public class ProductoForm extends javax.swing.JDialog {
    // Variables de instancia
    private Integer id;           // para saber qué registro editar
    private String nombreIngresado = null;
    private Double precioCompra = null;
    private Double precioVenta_Ingresad = null;
    private Integer idcategoria_Ingresado = null;
    private Double saldo = null;
    private boolean guardado = false;
    
    private Map<String, Integer> mapaCategoria = new HashMap<>();

    public ProductoForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        // Posicionar en el centro de lapantalla
        this.setLocationRelativeTo(this);
        
        //System.out.println("NUEVO REGISTROS.....");
        setTitle("Nuevo Producto");
        
        // Cargar combobox de Categorías
        cargarCategorias();
    }
    
    // Constructor con datos (para edición)
    public ProductoForm(java.awt.Frame parent, boolean modal, Integer id, String nombre, Integer idcategoria, Double precioVenta) {
        super(parent, modal);
        initComponents();
        
        // Posicionar en el centro de lapantalla
        this.setLocationRelativeTo(this);
        
        // Editar Registro
        this.id = id;
        
        // Cargar el nombre en el campo de texto
        txtNombre.setText(nombre);
        txtPrecioVenta.setText(String.valueOf(precioVenta));
        setTitle("Editar Producto");
        
        // Cargar combobox de Categorías
        cargarCategorias();
        
        // ✅ Autoseleccionar la categoría
        seleccionarCategoriaPorId(idcategoria);
    }
    
    private void cargarCategorias() {
        CategoriaDAO dao = new CategoriaDAO();
        List<Categoria> categorias = dao.listar();
        
        // Limpiar
        cbCategoria.removeAllItems();
        mapaCategoria.clear();
        
        // Opción vacía
        cbCategoria.addItem("-- Seleccione --");
        mapaCategoria.put("-- Seleccione --", null);
        
        for (Categoria c : categorias) {
            cbCategoria.addItem(c.getNombre());              // Texto en el combo
            mapaCategoria.put(c.getNombre(), c.getId()); // Asociar nombre -> id
        }
    }
    public void seleccionarCategoriaPorId(Integer categoriaId) {
        if (categoriaId == null) {
            cbCategoria.setSelectedIndex(0); // "-- Seleccione --"
            return;
        }
        
        // Buscar el nombre asociado al ID
        for (Map.Entry<String, Integer> entry : mapaCategoria.entrySet()) {
            if (categoriaId.equals(entry.getValue())) {
                cbCategoria.setSelectedItem(entry.getKey());
                return;
            }
        }
        
        // Si no se encuentra, seleccionar la opción vacía
        cbCategoria.setSelectedIndex(0);
    }
    
    // Método para obtener la variable ingresada en los campos del formulario
    public String getNombreIngresado() {
        return nombreIngresado;
    }
    public Integer getIdCategoriaIngresado() {
        return idcategoria_Ingresado;
    }
    public Double getPrecioVtaIngresado() {
        return precioVenta_Ingresad;
    }
    // Método para saber si se guardó
    public boolean isGuardado() {
        return guardado;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        cbCategoria = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        txtPrecioVenta = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Nombre:");

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel2.setText("Categoría:");

        jLabel3.setText("Precio venta:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNombre)
                    .addComponent(cbCategoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtPrecioVenta, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnGuardar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 79, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(5, 5, 5)
                .addComponent(cbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPrecioVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnCancelar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        String nombre = txtNombre.getText().trim();
        String nombreCategoriaSeleccionada = (String) cbCategoria.getSelectedItem();
        
        if (nombre.isEmpty()) {
            JOptionPane.showMessageDialog(this, "El nombre es obligatorio.");
            txtNombre.requestFocus();
            return;
        }
        if (nombreCategoriaSeleccionada == null || "-- Seleccione --".equals(nombreCategoriaSeleccionada)) {
            JOptionPane.showMessageDialog(this, "Seleccione alguna categoría.");
            txtNombre.requestFocus();
            return;
        }
        // Obtener el ID de la categoría
        Integer idcategoria = mapaCategoria.get(nombreCategoriaSeleccionada);
        
        // Validar campo numérico
        Double precio;
        try {
            precio = Double.valueOf(txtPrecioVenta.getText());
            if(precio <= 0) {
                throw new NumberFormatException("Precio de venta debe ser mayor que cero. ");
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Precio de venta inválido. Introduzca un número positivo.");
            txtPrecioVenta.requestFocus();
            return;
        }
                
        this.nombreIngresado = nombre;
        this.idcategoria_Ingresado = idcategoria;
        this.precioVenta_Ingresad = precio;
        this.guardado = true;
        dispose(); // cierra el diálogo        
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // No se guarda
        this.guardado = false;
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ProductoForm dialog = new ProductoForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JComboBox<String> cbCategoria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecioVenta;
    // End of variables declaration//GEN-END:variables
}
